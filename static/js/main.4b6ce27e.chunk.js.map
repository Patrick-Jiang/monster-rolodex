{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","Cardlist","monsters","map","SearchBox","placeholder","handleChange","debounceTimeout","type","onChange","App","e","setState","searchMonster","target","value","console","log","state","axios","get","then","res","data","this","filteredMonster","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAIaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,YAEN,mCAAOL,EAAMG,QAAQG,KAArB,OACA,4BAAIN,EAAMG,QAAQI,YCQTC,EAfG,SAAAR,GAEhB,OACA,qBAAKC,UAAU,YAAf,SAEED,EAAMS,SAASC,KACb,SAACP,GAAD,OACG,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,U,gBCRfO,EAAY,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,YAAYC,EAAgB,EAAhBA,aACrC,OAAO,cAAC,gBAAD,CAEPZ,UAAU,SACVa,gBAAiB,IACjBC,KAAK,SACLH,YAAcA,EACdI,SAAUH,K,iBC2CGI,G,wDA9Cb,aAAe,IAAD,8BACZ,gBAkBFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAAEC,cAAeF,EAAEG,OAAOC,QAAS,WAC/CC,QAAQC,IACN,wDACA,EAAKC,MAAML,mBArBf,EAAKK,MAAQ,CACXhB,SAAU,GAKVW,cAAe,IARL,E,qDAWd,WAAqB,IAAD,OAIlBM,IACGC,IAAI,8CACJC,MAAK,SAACC,GAAD,OAAS,EAAKV,SAAS,CAAEV,SAAUoB,EAAIC,Y,oBAWjD,WAAU,IAAD,EAC6BC,KAAKN,MAAjChB,EADD,EACCA,SAAUW,EADX,EACWA,cACZY,EAAkBvB,EAASwB,QAAO,SAAC9B,GAAD,OACtCA,EAAQG,KAAK4B,cAAcC,SAASf,EAAcgB,wBAEpD,OACE,sBAAKnC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAckB,KAAKlB,eAErB,cAAC,EAAD,CAAUJ,SAAUuB,W,GAzCVK,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4b6ce27e.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\n\r\nexport const Card = (props) =>{\r\n  return (\r\n    <div className='card-container'>\r\n      <img\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n        alt=\"monster\"\r\n      />\r\n      <h2 > {props.monster.name} </h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n\r\n  )\r\n}","import React from 'react'\r\nimport './card-list.styles.css'\r\nimport {Card} from '../card/card.component'\r\n\r\n\r\n const Cardlist = props => {\r\n\r\n  return(\r\n  <div className='card-list'>\r\n    {\r\n    props.monsters.map(\r\n      (monster) =>\r\n        (<Card key={monster.id} monster= {monster}/>)\r\n        )\r\n      }\r\n  </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Cardlist","import React from 'react'\r\nimport './search-box.styles.css'\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nexport const SearchBox = ({placeholder,handleChange})=>{\r\n  return <DebounceInput\r\n  // minLength={2}\r\n  className='search'\r\n  debounceTimeout={300}\r\n  type='search'\r\n  placeholder={ placeholder }\r\n  onChange={handleChange}\r\n/>\r\n\r\n}","// import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport Cardlist from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [\n        // { name: 'Frankenstein', id: 'asc1' },\n        // { name: 'Dracula', id: 'asc2' },\n        // { name: 'Zombie', id: 'asc3' },\n      ],\n      searchMonster: '',\n    };\n  }\n  componentDidMount() {\n    // fetch('https://jsonplaceholder.typicode.com/users')\n    //   .then((response) => response.json())\n    //   .then((json) => this.setState({ monsters: json }));\n    axios\n      .get('https://jsonplaceholder.typicode.com/users')\n      .then((res) => this.setState({ monsters: res.data }));\n  }\n  handleChange = (e) => {\n    this.setState({ searchMonster: e.target.value }, () => {\n      console.log(\n        'file: App.js ~ line 36 ~ App ~ render ~ searchMonster',\n        this.state.searchMonster\n      );\n    });\n  };\n\n  render() {\n    const { monsters, searchMonster } = this.state;\n    const filteredMonster = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchMonster.toLocaleLowerCase())\n    );\n    return (\n      <div className='App'>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder='search monsters'\n          handleChange={this.handleChange}\n        />\n        <Cardlist monsters={filteredMonster}></Cardlist>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}